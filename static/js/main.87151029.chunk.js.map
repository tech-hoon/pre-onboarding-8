{"version":3,"sources":["utils/date.ts","utils/Id.ts","utils/sorting.ts","hooks/useTodo.tsx","utils/config.ts","components/todos/TodoContainer.tsx","components/todos/TodoHeader.tsx","utils/dragNdrop.ts","components/todos/TodoItem.tsx","components/todos/TodoList.tsx","components/common/container/CreateButton.tsx","components/common/filter/Filter.tsx","components/common/filter/FilterModal.tsx","components/common/filter/FilterDropDown.tsx","hooks/useForm.tsx","components/common/form/CreateForm.tsx","components/common/form/FormButtons.tsx","components/common/form/FormTextArea.tsx","components/common/form/UpdateForm.tsx","components/common/header/Header.tsx","components/common/form/Radio.tsx","components/common/form/RadioBox.tsx","components/common/container/DeleteButton.tsx","App.tsx","components/common/InputForm.tsx","styles/theme.ts","styles/GlobalStyle.ts","index.tsx"],"names":["currentDate","date","Date","getFullYear","getMonth","getDate","currentId","items","Math","max","map","item","id","sortTodoHandle","a","b","dateA","createdAt","getTime","useTodo","useState","mockData","setItems","selectedFilter","setSeletedFilter","filteredItems","setFilteredItems","handleTodoCreate","useCallback","status","text","creator","prevItems","taskName","handleTodoDelete","taskID","filter","handleTodoUpdate","updatedAt","handleTodoPosUpdate","clickedId","insertPosition","updatePosition","target","find","Number","targetCard","excludeTargetCardItems","index","i","length","start","slice","end","handleTodoSort","sorted","sort","reduce","unique","includes","handleTodoCreator","creators","filtered","forEach","data","push","STATUS","Todo","InProgress","Done","CREATOR_LIST","Wrapper","styled","div","TodoContainer","todoItems","isVisibleForm","setIsVisibleForm","handleVisibleForm","prevVisible","titleColor","theme","size","mobile","Left","Right","desktop","Title","h2","color","BLACK","props","Count","GRAY","TodoHeader","dropOpen","setDropOpen","selectCreator","setSelectCreator","filterOpen","creatorChecked","checked","value","check","getInsertPlace","currentCard","y","placeInfo","getBoundingClientRect","bottom","top","TodoItem","todoItem","dragStart","setDragStart","dragEnter","setEnterDrag","up","down","onEffect","setEffect","isClicked","setIsClicked","className","draggable","onDragStart","e","dataTransfer","setData","JSON","stringify","onDragOver","preventDefault","closest","clientY","onDragLeave","onDrop","itemId","Item","onClick","Row1","Row2","TaskName","Row3","Creator","Row4","DateLabel","SKYBLUE","li","tablet","h3","p","label","React","memo","TodoList","clickedCardID","parse","getData","ul","ButtonStyled","button","ICON_COLOR","CreateButton","Filter","Button","FilterDropDown","filterClose","Modal","closeModal","Container","onSubmit","Content","name","Input","type","onChange","currentTarget","htmlFor","ResultBox","ResultButton","form","Header","input","DropDown","modalOpen","setModalOpen","handleModalClick","FilterOptions","Value","span","useForm","setText","setCreator","handleRadioChange","handleTextAreaChange","FormStyled","CreateForm","placeholder","values","handleButtonClick","ButtonBox","AddButton","transparent","CancelButton","FormButtons","isAvailable","undefined","disabled","TextArea","textarea","FormTextArea","autoFocus","UpdateForm","HeaderWrapper","h1","RadioWrapper","InputStyled","LabelStyled","Radio","RadioBoxWrapper","RadioBox","DeleteButton","stopPropagation","targetItems","ContainerWrapper","App","Object","LIGHT_BLACK","TRANSPARENT","GlobalStyle","createGlobalStyle","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87151029.chunk.js","sourcesContent":["export const currentDate = (): string => {\n  const date = new Date();\n  return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n};\n","import { TodoTypes } from 'components';\n\nexport const currentId = (items: TodoTypes[]): number => {\n  const maxId = Math.max(...items.map((item: TodoTypes) => item.id));\n\n  return maxId + 1;\n};\n","//sorting\nexport const sortTodoHandle = (\n  a: { createdAt: string | number | Date },\n  b: { createdAt: string | number | Date },\n) => {\n  const dateA = new Date(a.createdAt).getTime();\n  const dateB = new Date(b.createdAt).getTime();\n  return dateB > dateA ? 1 : -1;\n};\n","import { useState, useCallback, Dispatch, SetStateAction } from 'react';\nimport { TodoTypes } from 'components';\nimport { currentDate } from 'utils/date';\nimport { currentId } from 'utils/Id';\nimport mockData from 'utils/data.json';\nimport { sortTodoHandle } from 'utils/sorting';\n\ntype useTodoType = {\n  items: TodoTypes[];\n  selectedFilter: string;\n  filteredItems: TodoTypes[];\n  setItems: Dispatch<SetStateAction<TodoTypes[]>>;\n  handleTodoCreate: (status: string, text: string, creator: string) => void;\n  handleTodoDelete: (taskID: number) => void;\n  handleTodoSort: (status: string) => void;\n  handleTodoCreator: (creators: string[], status: string) => void;\n  handleTodoUpdate: (text: string, id: number) => void;\n  handleTodoPosUpdate: (\n    status: string,\n    currentId: string | undefined,\n    clickedId: string,\n    insertPosition?: string,\n  ) => void;\n};\n\nconst useTodo = (): useTodoType => {\n  const [items, setItems] = useState<TodoTypes[]>(mockData);\n  const [selectedFilter, setSeletedFilter] = useState<string>('');\n  const [filteredItems, setFilteredItems] = useState<TodoTypes[]>([]);\n\n  const handleTodoCreate = useCallback((status: string, text: string, creator: string) => {\n    setItems((prevItems) => [\n      ...prevItems,\n      {\n        id: currentId(prevItems),\n        taskName: text,\n        status: status,\n        creator: creator,\n        createdAt: currentDate(),\n      },\n    ]);\n  }, []);\n\n  const handleTodoDelete = useCallback((taskID: number) => {\n    setItems((prevItems) => prevItems.filter(({ id }) => id !== taskID));\n  }, []);\n\n  const handleTodoUpdate = useCallback((text: string, id: number) => {\n    setItems((prevItems) =>\n      prevItems.map((item: TodoTypes) =>\n        id === item.id ? { ...item, taskName: text, updatedAt: currentDate() } : item,\n      ),\n    );\n  }, []);\n\n  const handleTodoPosUpdate = useCallback(\n    (status: string, currentId: string | undefined, clickedId: string, insertPosition?: string) => {\n      setItems((prevItems) => updatePosition(prevItems));\n\n      const updatePosition = (prevItems: any) => {\n        const target = prevItems.find((item: TodoTypes) => item.id === Number(clickedId));\n        const targetCard = { ...target, status, updatedAt: currentDate() };\n        const excludeTargetCardItems = prevItems.filter(\n          (item: TodoTypes) => item.id !== Number(clickedId),\n        );\n\n        let index = 0;\n\n        for (let i = 0; i < excludeTargetCardItems.length; i++) {\n          if (!currentId) {\n            if (excludeTargetCardItems[i].status === status) {\n              index = i + 1;\n              continue;\n            }\n          }\n\n          if (excludeTargetCardItems[i].id === Number(currentId)) {\n            index = insertPosition === 'beforebegin' ? i : i + 1;\n            continue;\n          }\n        }\n\n        const start = excludeTargetCardItems.slice(0, index);\n        const end = excludeTargetCardItems.slice(index);\n\n        return [...start, targetCard, ...end];\n      };\n    },\n    [],\n  );\n\n  const handleTodoSort = useCallback(\n    (status: string) => {\n      const result = [\n        ...items.filter((item) => item.status === status).sort(sortTodoHandle),\n        ...items,\n      ];\n      const sorted = result.reduce(\n        (unique: TodoTypes[], item: TodoTypes) =>\n          unique.includes(item) ? unique : [...unique, item],\n        [],\n      );\n      setItems(sorted);\n    },\n    [items],\n  );\n\n  const handleTodoCreator = useCallback((creators: string[], status: string) => {\n    const filtered: TodoTypes[] = [];\n\n    creators.forEach((creator) => {\n      const data = items.filter((item) => item.status === status && item.creator === creator);\n      filtered.push(...data);\n    });\n\n    setFilteredItems(filtered);\n    setSeletedFilter(status);\n  }, []);\n\n  return {\n    items,\n    setItems,\n    selectedFilter,\n    filteredItems,\n    handleTodoCreate,\n    handleTodoDelete,\n    handleTodoUpdate,\n    handleTodoSort,\n    handleTodoCreator,\n    handleTodoPosUpdate,\n  };\n};\n\nexport default useTodo;\n","interface Status {\n  Todo: string;\n  InProgress: string;\n  Done: string;\n}\n\ninterface FilterOption {\n  createDate: string;\n  creator: string;\n}\n\nexport const STATUS: Status = {\n  Todo: '할 일',\n  InProgress: '진행 중',\n  Done: '완료',\n};\n\nexport const CREATOR_LIST = ['남주', '택훈', '진수', '삭'];\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport { TodoHeader, TodoList, CreateForm, TodoTypes } from 'components';\n\ninterface TodoContainerProps {\n  status: string;\n  setItems: Dispatch<SetStateAction<TodoTypes[]>>;\n  todoItems: TodoTypes[];\n  selectedFilter: string;\n  filteredItems: TodoTypes[];\n  handleTodoCreate: (status: string, text: string, creator: string) => void;\n  handleTodoDelete: (taskID: number) => void;\n  handleTodoUpdate: (text: string, id: number) => void;\n  handleTodoSort: (status: string) => void;\n  handleTodoCreator: (creators: string[], status: string) => void;\n  handleTodoPosUpdate: (\n    status: string,\n    currentId: string | undefined,\n    clickedId: string,\n    insertPosition?: string,\n  ) => void;\n}\n\nconst TodoContainer: React.FC<TodoContainerProps> = ({\n  status,\n  todoItems,\n  selectedFilter,\n  filteredItems,\n  handleTodoCreate,\n  handleTodoDelete,\n  handleTodoUpdate,\n  handleTodoSort,\n  handleTodoCreator,\n  handleTodoPosUpdate,\n}) => {\n  const [isVisibleForm, setIsVisibleForm] = useState(false);\n\n  const handleVisibleForm = () => {\n    setIsVisibleForm((prevVisible) => !prevVisible);\n  };\n\n  return (\n    <Wrapper>\n      <TodoHeader\n        todoItems={status === selectedFilter && filteredItems.length ? filteredItems : todoItems}\n        status={status}\n        handleVisibleForm={handleVisibleForm}\n        handleTodoSort={handleTodoSort}\n        handleTodoCreator={handleTodoCreator}\n      />\n      {isVisibleForm && (\n        <CreateForm\n          status={status}\n          handleVisibleForm={handleVisibleForm}\n          handleTodoCreate={handleTodoCreate}\n        />\n      )}\n      <TodoList\n        status={status}\n        todoItems={status === selectedFilter && filteredItems.length ? filteredItems : todoItems}\n        handleTodoDelete={handleTodoDelete}\n        handleTodoUpdate={handleTodoUpdate}\n        handleTodoPosUpdate={handleTodoPosUpdate}\n      />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nexport default TodoContainer;\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport { Filter, CreateButton, TodoTypes } from 'components';\n\ninterface TodoHeaderProps {\n  status: string;\n  todoItems: TodoTypes[];\n\n  handleTodoSort: (status: string) => void;\n  handleTodoCreator: (creators: string[], status: string) => void;\n  handleVisibleForm: () => void;\n}\n\nconst TodoHeader: React.FC<TodoHeaderProps> = ({\n  status,\n  todoItems,\n  handleTodoSort,\n  handleTodoCreator,\n  handleVisibleForm,\n}) => {\n  const [dropOpen, setDropOpen] = useState<boolean>(false);\n  const [selectCreator, setSelectCreator] = useState<any[]>([]);\n\n  const onFilterOpenHandler = () => setDropOpen(!dropOpen);\n\n  const onCreatorNameCheckedHandler = (checked: boolean, value: string) => {\n    if (checked) {\n      setSelectCreator([...selectCreator, value]);\n    } else {\n      setSelectCreator(selectCreator.filter((check) => check !== value));\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Left>\n        <Title color={titleColor(status)}>{status}</Title>\n        <Count>{todoItems.length}</Count>\n      </Left>\n      <Right>\n        <CreateButton handleVisibleForm={handleVisibleForm} />\n        <Filter\n          status={status}\n          dropOpen={dropOpen}\n          filterOpen={onFilterOpenHandler}\n          selectCreator={selectCreator}\n          creatorChecked={onCreatorNameCheckedHandler}\n          handleTodoSort={handleTodoSort}\n          handleTodoCreator={handleTodoCreator}\n          todoItems={todoItems}\n        />\n      </Right>\n    </Wrapper>\n  );\n};\n\nconst titleColor = (status: string): string => {\n  if (status === '할 일') return `rgba(255, 0, 26, 0.2)`;\n  else if (status === '진행 중') return `rgba(233, 168, 0, 0.2)`;\n  else return `rgba(0, 135, 107, 0.2)`;\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media ${({ theme }) => theme.size.mobile} {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  padding: 0 4px 16px;\n  box-shadow: rgb(55 53 47 / 16%) 0px 0.4px 0px;\n`;\n\nconst Left = styled.div`\n  display: flex;\n  gap: 0 4px;\n  align-items: center;\n`;\n\nconst Right = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media ${({ theme }) => theme.size.desktop} {\n    gap: 0 4px;\n  }\n\n  @media ${({ theme }) => theme.size.mobile} {\n    justify-content: space-between;\n    margin-top: 8px;\n  }\n`;\n\nconst Title = styled.h2`\n  flex: 1;\n  color: ${({ theme }) => theme.color.BLACK};\n  padding: 6px;\n  border-radius: 4px;\n  background-color: ${(props) => props.color};\n`;\n\nconst Count = styled.h2`\n  color: ${({ theme }) => theme.color.GRAY};\n  margin-left: 8px;\n\n  @media ${({ theme }) => theme.size.mobile} {\n    flex-direction: column;\n    display: none;\n  }\n`;\n\nexport default TodoHeader;\n","export const getInsertPlace = (currentCard: Element | null, y: number): string => {\n  if (!currentCard) return 'afterend';\n  const placeInfo = currentCard.getBoundingClientRect();\n  const placeY = placeInfo.bottom - y;\n  const targetHeight = placeInfo.bottom - placeInfo.top;\n  const insertPlace = placeY > targetHeight / 2 ? 'beforebegin' : 'afterend';\n\n  return insertPlace;\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { DeleteButton, TodoTypes, UpdateForm } from 'components';\nimport { getInsertPlace } from 'utils/dragNdrop';\n\ninterface TodoItemProps {\n  status: string;\n  todoItem: TodoTypes;\n  handleTodoUpdate: (text: string, id: number) => void;\n  handleTodoDelete: (taskID: number) => void;\n}\n\nconst TodoItem: React.FC<TodoItemProps> = ({\n  todoItem: { id, taskName, status, creator, createdAt, updatedAt },\n  handleTodoUpdate,\n  handleTodoDelete,\n}) => {\n  const [dragStart, setDragStart] = useState(false);\n  const [dragEnter, setEnterDrag] = useState(false);\n  const [onEffect, setEffect] = useState({ up: false, down: false });\n  const [isClicked, setIsClicked] = useState(false);\n\n  const handleVisibleForm = () => {\n    setIsClicked((prevVisible) => !prevVisible);\n  };\n\n  const handleDragStart = (e: React.DragEvent<HTMLElement>) => {\n    e.dataTransfer.setData(\n      'card',\n      JSON.stringify({ id, taskName, status, creator, createdAt, updatedAt }),\n    );\n    setDragStart(true);\n  };\n\n  const handleDragOverOnCard = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault();\n    const target = e.target as HTMLElement;\n    setEnterDrag(true);\n    getInsertPlace(target.closest('.card'), e.clientY) === 'beforebegin'\n      ? setEffect({ up: true, down: false })\n      : setEffect({ up: false, down: true });\n    setDragStart(false);\n  };\n\n  const handleDragLeave = () => setEnterDrag(false);\n\n  const handleDragDrop = () => setEffect({ up: false, down: false });\n\n  return (\n    <Wrapper\n      id={`${id}`}\n      className=\"card\"\n      draggable={true}\n      dragStart={dragStart}\n      dragEnter={dragEnter}\n      onEffect={onEffect}\n      onDragStart={handleDragStart}\n      onDragOver={handleDragOverOnCard}\n      onDragLeave={handleDragLeave}\n      onDrop={handleDragDrop}\n    >\n      {isClicked ? (\n        <UpdateForm\n          handleVisibleForm={handleVisibleForm}\n          handleTodoUpdate={handleTodoUpdate}\n          itemId={id}\n          taskName={taskName}\n        />\n      ) : (\n        <Item onClick={handleVisibleForm}>\n          <Row1>\n            <DeleteButton taskID={id} handleTodoDelete={handleTodoDelete} />\n          </Row1>\n          <Row2>\n            <TaskName>{taskName}</TaskName>\n          </Row2>\n          <Row3>\n            <Creator>{creator}</Creator>\n            <Row4>\n              <Date>\n                <DateLabel>생성일 </DateLabel>\n                {createdAt}\n              </Date>\n              {updatedAt && (\n                <Date>\n                  <DateLabel>수정일 </DateLabel>\n                  {updatedAt}\n                </Date>\n              )}\n            </Row4>\n          </Row3>\n        </Item>\n      )}\n    </Wrapper>\n  );\n};\ninterface Effect {\n  up: boolean;\n  down: boolean;\n}\ninterface WrapperProp {\n  dragStart: boolean;\n  dragEnter: boolean;\n  onEffect: Effect;\n}\n\nconst Wrapper = styled.div<WrapperProp>`\n  opacity: ${(props) => (props.dragStart ? 0.5 : 1)};\n  border: 5px solid transparent;\n  border-top: ${(props) =>\n    props.dragEnter && props.onEffect.up && `5px solid ${props.theme.color.SKYBLUE}`};\n  border-bottom: ${(props) =>\n    props.dragEnter && props.onEffect.down && `5px solid ${props.theme.color.SKYBLUE}`};\n`;\n\nconst Item = styled.li`\n  box-shadow: rgb(15 15 15 / 10%) 0px 0px 0px 1px, rgb(15 15 15 / 10%) 0px 2px 4px;\n  &:hover {\n    background: rgba(55, 53, 47, 0.03);\n    cursor: pointer;\n  }\n  padding: 0px 20px 18px;\n  border-radius: 4px;\n`;\n\nconst Row1 = styled.div`\n  width: 100%;\n  margin-left: 95%;\n\n  @media ${({ theme }) => theme.size.mobile} {\n    margin-left: 90%;\n  }\n`;\n\nconst Row2 = styled.div`\n  width: 100%;\n`;\n\nconst Row3 = styled.div`\n  width: 100%;\n  display: flex;\n\n  @media ${({ theme }) => theme.size.desktop} {\n    justify-content: space-between;\n  }\n\n  @media ${({ theme }) => theme.size.tablet} {\n    flex-direction: column;\n  }\n\n  @media ${({ theme }) => theme.size.mobile} {\n    flex-direction: column;\n  }\n`;\n\nconst Row4 = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n`;\n\nconst TaskName = styled.h3`\n  color: ${({ theme }) => theme.color.BLACK};\n  width: 100%;\n  font-weight: 500;\n  margin-bottom: 12px;\n  @media ${({ theme }) => theme.size.desktop} {\n    font-size: 1.3em;\n    line-height: 1.5;\n  }\n\n  @media ${({ theme }) => theme.size.mobile} {\n    font-size: 1.1em;\n    line-height: 1.3;\n  }\n`;\n\nconst Creator = styled.h3`\n  color: ${({ theme }) => theme.color.SKYBLUE};\n  font-size: 0.9em;\n`;\n\nconst Date = styled.p`\n  color: ${({ theme }) => theme.color.GRAY};\n  margin-top: 4px;\n\n  @media ${({ theme }) => theme.size.desktop} {\n    font-size: 0.7em;\n  }\n\n  @media ${({ theme }) => theme.size.mobile} {\n    font-size: 0.3em;\n  }\n`;\n\nconst DateLabel = styled.label`\n  @media ${({ theme }) => theme.size.mobile} {\n    display: none;\n  }\n`;\n\nexport default React.memo(TodoItem);\n","import React, { useState, useRef, useEffect, Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport { TodoItem, TodoTypes } from 'components';\nimport { getInsertPlace } from 'utils/dragNdrop';\ninterface TodoListProps {\n  status: string;\n  todoItems: TodoTypes[];\n  handleTodoUpdate: (text: string, id: number) => void;\n  handleTodoDelete: (taskID: number) => void;\n  handleTodoPosUpdate: (\n    status: string,\n    currentId: string | undefined,\n    clickedId: string,\n    insertPosition?: string,\n  ) => void;\n}\n\nconst TodoList: React.FC<TodoListProps> = ({\n  status,\n  todoItems,\n  handleTodoDelete,\n  handleTodoUpdate,\n  handleTodoPosUpdate,\n}) => {\n  const handleDrop = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault();\n    const target = e.target as HTMLElement;\n    const clickedCardID = JSON.parse(e.dataTransfer.getData('card')).id;\n    const currentCard = target.closest('.card');\n    const insertPosition = getInsertPlace(currentCard, e.clientY);\n\n    handleTodoPosUpdate(status, currentCard?.id, clickedCardID, insertPosition);\n  };\n\n  const handleDragOverOnColumn = (e: React.DragEvent<HTMLElement>) => e.preventDefault();\n\n  return (\n    <Wrapper\n      className={`cardlist ${status}`}\n      onDragOver={handleDragOverOnColumn}\n      onDrop={handleDrop}\n    >\n      {todoItems.map((todoItem, i) => (\n        <TodoItem\n          key={i}\n          status={status}\n          todoItem={todoItem}\n          handleTodoUpdate={handleTodoUpdate}\n          handleTodoDelete={handleTodoDelete}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(TodoList);\n\nconst Wrapper = styled.ul`\n  padding: 4px;\n  height: 500px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BsPlus } from 'react-icons/bs';\n\ninterface CreateButtonProps {\n  handleVisibleForm: () => void;\n}\n\nconst CreateButton: React.FC<CreateButtonProps> = ({ handleVisibleForm }): JSX.Element => {\n  const handleButtonClick = () => handleVisibleForm();\n\n  return (\n    <ButtonStyled onClick={handleButtonClick}>\n      <BsPlus />\n    </ButtonStyled>\n  );\n};\n\nconst ButtonStyled = styled.button`\n  font-size: 1.5em;\n  padding: 0px;\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.color.ICON_COLOR};\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport default CreateButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MdFilterList } from 'react-icons/md';\nimport { FilterDropDown } from 'components';\nimport { TodoTypes } from 'components/todos/TodoTypes';\n\ninterface DropDownProps {\n  status: string;\n  todoItems: TodoTypes[];\n  dropOpen: boolean;\n  selectCreator: string[];\n  filterOpen: () => void;\n  creatorChecked: (checked: boolean, value: string) => void;\n  handleTodoSort: (status: string) => void;\n  handleTodoCreator: (creators: string[], status: string) => void;\n}\n\nconst Filter: React.FC<DropDownProps> = ({\n  status,\n  dropOpen,\n  filterOpen,\n  creatorChecked,\n  selectCreator,\n  handleTodoSort,\n  handleTodoCreator,\n}) => {\n  return (\n    <Wrapper>\n      <Button onClick={filterOpen}>\n        <MdFilterList size={24} />\n      </Button>\n      {dropOpen && (\n        <FilterDropDown\n          status={status}\n          creatorChecked={creatorChecked}\n          selectCreator={selectCreator}\n          handleTodoSort={handleTodoSort}\n          filterClose={filterOpen}\n          handleTodoCreator={handleTodoCreator}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n\nconst Wrapper = styled.div`\n  text-align: right;\n  cursor: pointer;\n  position: relative;\n`;\n\nconst Button = styled.button`\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { CREATOR_LIST } from 'utils/config';\nimport { MdClose } from 'react-icons/md';\nimport { TodoTypes } from 'components';\ninterface DropDownProps {\n  creatorChecked: (checked: boolean, value: string) => void;\n  selectCreator: string[];\n  closeModal: () => void;\n  filterClose: () => void;\n  status: string;\n  handleTodoCreator: (creators: string[], status: string) => void;\n}\n\nconst Modal: React.FC<DropDownProps> = ({\n  status,\n  creatorChecked,\n  selectCreator,\n  closeModal,\n  filterClose,\n  handleTodoCreator,\n}) => {\n  const creatorFilterTodo = () => {\n    handleTodoCreator(selectCreator, status);\n    closeModal();\n    filterClose();\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    creatorFilterTodo();\n  };\n\n  return (\n    <Wrapper>\n      <Container onSubmit={onSubmit}>\n        <Header>\n          <h2>생성자 필터 선택</h2>\n          <MdClose onClick={closeModal} />\n        </Header>\n        <Content>\n          {CREATOR_LIST.map((name: string | any, index) => (\n            <div key={index}>\n              <Input\n                type=\"checkbox\"\n                name={name}\n                checked={selectCreator.includes(name) ? true : false}\n                onChange={(e) => creatorChecked(e.currentTarget.checked, name)}\n              />\n              <label htmlFor={name}>{name}</label>\n            </div>\n          ))}\n        </Content>\n        <ResultBox>\n          <ResultButton>확인</ResultButton>\n        </ResultBox>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default Modal;\n\nconst Wrapper = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nconst Container = styled.form`\n  width: 400px;\n  height: 200px;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  border-radius: 10px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0 2rem;\n\n  h2 {\n    font-weight: bold;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0 2rem;\n`;\n\nconst Input = styled.input`\n  cursor: pointer;\n`;\n\nconst ResultBox = styled.div`\n  margin-bottom: 0.4rem;\n`;\n\nconst ResultButton = styled.button`\n  outline: none;\n  border: none;\n  cursor: pointer;\n  color: #24272a;\n  border: 1px solid #dfdfdf;\n  background-color: #fafbfd;\n  padding: 0.6rem 2.6rem;\n\n  :hover {\n    background-color: #8dc997;\n    color: #fff;\n  }\n`;\n","import { TodoTypes } from 'components/todos/TodoTypes';\nimport React, { useState, Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport CreatorModal from './FilterModal';\nimport { sortTodoHandle } from 'utils/sorting';\ninterface DropDownProps {\n  status: string;\n  creatorChecked: (checked: boolean, value: string) => void;\n  selectCreator: string[];\n  handleTodoSort: (status: string) => void;\n  handleTodoCreator: (creators: string[], status: string) => void;\n  filterClose: () => void;\n}\n\nconst DropDown: React.FC<DropDownProps> = ({\n  creatorChecked,\n  selectCreator,\n  handleTodoSort,\n  handleTodoCreator,\n  filterClose,\n  status,\n}) => {\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n\n  const handleModalClick = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  const sortEvent = () => {\n    handleTodoSort(status);\n    filterClose();\n  };\n\n  return (\n    <FilterOptions>\n      <Value onClick={sortEvent}>생성일</Value>\n      <Value onClick={handleModalClick}>생성자</Value>\n      {modalOpen && (\n        <CreatorModal\n          creatorChecked={creatorChecked}\n          selectCreator={selectCreator}\n          closeModal={handleModalClick}\n          handleTodoCreator={handleTodoCreator}\n          filterClose={filterClose}\n          status={status}\n        />\n      )}\n    </FilterOptions>\n  );\n};\n\nexport default DropDown;\n\nconst FilterOptions = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  box-shadow: rgb(15 15 15 / 10%) 0px 0px 0px 1px, rgb(15 15 15 / 10%) 0px 2px 4px;\n  border-radius: 5px;\n  width: 100px;\n  right: 0;\n  gap: 10px 0;\n  background-color: #fff;\n  text-align: center;\n`;\n\nconst Value = styled.span`\n  padding: 5px 0;\n\n  :hover {\n    background-color: rgba(0, 0, 0, 0.7);\n    color: #fff;\n  }\n`;\n","import { useState } from 'react';\n\ninterface useFormType {\n  text: string;\n  creator: string;\n  handleRadioChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  handleTextAreaChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n}\n\nexport const useForm = (): useFormType => {\n  const [text, setText] = useState('');\n  const [creator, setCreator] = useState('');\n\n  const handleRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCreator(e.target.value);\n  };\n\n  const handleTextAreaChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  return { text, creator, handleRadioChange, handleTextAreaChange };\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { RadioBox, FormButtons, FormTextArea } from 'components';\nimport { useForm } from 'hooks/useForm';\nimport { CREATOR_LIST } from 'utils/config';\ninterface CreateFormProps {\n  status: string;\n  handleVisibleForm: () => void;\n  handleTodoCreate: (status: string, text: string, creator: string) => void;\n}\n\nconst CreateForm: React.FC<CreateFormProps> = ({\n  status,\n  handleVisibleForm,\n  handleTodoCreate,\n}): JSX.Element => {\n  const { text, creator, handleRadioChange, handleTextAreaChange } = useForm();\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    handleTodoCreate(status, text, creator);\n    handleVisibleForm();\n  };\n\n  return (\n    <Wrapper>\n      <FormStyled onSubmit={handleFormSubmit}>\n        <FormTextArea\n          placeholder=\"Enter a note\"\n          text={text}\n          handleTextAreaChange={handleTextAreaChange}\n        />\n        <RadioBox values={CREATOR_LIST} handleRadioChange={handleRadioChange} status={status} />\n        <FormButtons text={text} creator={creator} handleButtonClick={handleVisibleForm} />\n      </FormStyled>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin-top: 12px;\n  padding: 20px;\n  border: 1px solid #dfdfdf;\n  border-radius: 10px;\n`;\n\nconst FormStyled = styled.form``;\n\nexport default CreateForm;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface FormButtons {\n  text: string;\n  creator?: string;\n  handleButtonClick: () => void;\n}\n\nconst FormButtons: React.FC<FormButtons> = ({ text, creator, handleButtonClick }): JSX.Element => {\n  const isAvailable = creator !== undefined ? !text || !creator : !text;\n\n  return (\n    <ButtonBox>\n      <AddButton type=\"submit\" disabled={isAvailable} transparent={isAvailable}>\n        Add\n      </AddButton>\n      <CancelButton type=\"button\" onClick={handleButtonClick}>\n        Cancel\n      </CancelButton>\n    </ButtonBox>\n  );\n};\n\nconst ButtonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  width: 100%;\n  height: 35px;\n\n  button {\n    width: 50%;\n    height: 100%;\n    border-radius: 10px;\n    font-size: 15px;\n\n    :hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst AddButton = styled.button<{ transparent: boolean }>`\n  border: none;\n  color: #edffee;\n  background-color: #34a350;\n  opacity: ${(props) => props.transparent && '0.6'};\n`;\n\nconst CancelButton = styled.button`\n  color: #24272a;\n  border: 1px solid #dfdfdf;\n  background-color: #fafbfd;\n`;\n\nexport default FormButtons;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface FormTextArea {\n  placeholder: string;\n  text: string;\n  handleTextAreaChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n}\n\nconst FormTextArea: React.FC<FormTextArea> = ({ placeholder, text, handleTextAreaChange }) => {\n  return (\n    <TextArea placeholder={placeholder} value={text} onChange={handleTextAreaChange} autoFocus />\n  );\n};\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  padding: 12px;\n  border-radius: 10px;\n  border-color: #dfdfdf;\n`;\n\nexport default FormTextArea;\n","import React, { Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport { FormButtons, FormTextArea } from 'components';\nimport { useForm } from 'hooks/useForm';\n\ninterface UpdateForm {\n  itemId: number;\n  taskName: string;\n  handleVisibleForm: () => void;\n  handleTodoUpdate: (text: string, id: number) => void;\n}\n\nconst UpdateForm: React.FC<UpdateForm> = ({\n  handleVisibleForm,\n  handleTodoUpdate,\n  itemId,\n  taskName,\n}): JSX.Element => {\n  const { text, handleTextAreaChange } = useForm();\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    handleTodoUpdate(text, itemId);\n\n    handleVisibleForm();\n  };\n\n  return (\n    <Wrapper>\n      <FormStyled onSubmit={handleFormSubmit}>\n        <FormTextArea\n          placeholder={taskName}\n          text={text}\n          handleTextAreaChange={handleTextAreaChange}\n        />\n        <FormButtons text={text} handleButtonClick={handleVisibleForm} />\n      </FormStyled>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin: 12px 0;\n  padding: 18px;\n  background-color: white;\n  border: 1px solid #dfdfdf;\n  border-radius: 4px;\n`;\n\nconst FormStyled = styled.form``;\n\nexport default UpdateForm;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Header: React.FC = (): JSX.Element => {\n  return (\n    <>\n      <HeaderWrapper>Todo List</HeaderWrapper>\n    </>\n  );\n};\n\nconst HeaderWrapper = styled.h1`\n  color: ${({ theme }) => theme.color.BLACK};\n\n  padding: 16px;\n  font-size: 1.8em;\n  font-weight: 400;\n  box-shadow: rgb(55 53 47 / 16%) 0px 1px 0px;\n\n  @media ${({ theme }) => theme.color.tablet} {\n    font-size: 2em;\n  }\n\n  @media ${({ theme }) => theme.color.mobile} {\n    font-size: 2em;\n  }\n`;\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface RadioProps {\n  value: string;\n  status: string;\n  handleRadioChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Radio: React.FC<RadioProps> = ({ value, status, handleRadioChange }): JSX.Element => {\n  return (\n    <RadioWrapper>\n      <InputStyled\n        type=\"radio\"\n        name={status}\n        id={value + status}\n        value={value}\n        onChange={handleRadioChange}\n      />\n      <LabelStyled htmlFor={value + status}>{value}</LabelStyled>\n    </RadioWrapper>\n  );\n};\n\nconst RadioWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst InputStyled = styled.input`\n  appearance: none;\n  margin: 0 10px 2px 0;\n  width: 15px;\n  height: 15px;\n  border: 1px solid #dfdfdf;\n  border-radius: 0;\n\n  :checked {\n    background: green;\n    border: none;\n    border-radius: 0;\n  }\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst LabelStyled = styled.label`\n  color: #24272a;\n  font-size: 14px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nexport default Radio;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Radio } from 'components';\n\ninterface RadioBoxProps {\n  values: string[];\n  status: string;\n  handleRadioChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst RadioBox: React.FC<RadioBoxProps> = ({ values, status, handleRadioChange }): JSX.Element => {\n  return (\n    <RadioBoxWrapper>\n      {values.map((value: string, index: number) => (\n        <Radio key={index} value={value} status={status} handleRadioChange={handleRadioChange} />\n      ))}\n    </RadioBoxWrapper>\n  );\n};\n\nconst RadioBoxWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin: 10px 0;\n`;\n\nexport default RadioBox;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { IoMdClose } from 'react-icons/io';\n\ninterface DeleteButtonProps {\n  taskID: number;\n  handleTodoDelete: (taskID: number) => void;\n}\n\nconst DeleteButton: React.FC<DeleteButtonProps> = ({ taskID, handleTodoDelete }): JSX.Element => {\n  return (\n    <Button\n      onClick={(e) => {\n        e.stopPropagation();\n        handleTodoDelete(taskID);\n      }}\n    >\n      <IoMdClose />\n    </Button>\n  );\n};\n\nconst Button = styled.button`\n  font-size: 1em;\n  color: ${({ theme }) => theme.color.ICON_COLOR};\n  padding: 8px;\n\n  &:hover {\n    transform: scale(1.3);\n  }\n`;\n\nexport default DeleteButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport useTodo from 'hooks/useTodo';\nimport { STATUS } from './utils/config';\nimport { Header, TodoContainer, TodoTypes } from 'components';\n\nconst App: React.FC = () => {\n  const {\n    items,\n    setItems,\n    selectedFilter,\n    filteredItems,\n    handleTodoCreate,\n    handleTodoDelete,\n    handleTodoUpdate,\n    handleTodoPosUpdate,\n    handleTodoSort,\n    handleTodoCreator,\n  } = useTodo();\n\n  return (\n    <Wrapper>\n      <Header />\n      <ContainerWrapper>\n        {Object.values(STATUS).map((status: string, index: number) => (\n          <TodoContainer\n            key={index}\n            status={status}\n            todoItems={targetItems(status, items)}\n            selectedFilter={selectedFilter}\n            filteredItems={filteredItems}\n            setItems={setItems}\n            handleTodoCreate={handleTodoCreate}\n            handleTodoDelete={handleTodoDelete}\n            handleTodoUpdate={handleTodoUpdate}\n            handleTodoSort={handleTodoSort}\n            handleTodoCreator={handleTodoCreator}\n            handleTodoPosUpdate={handleTodoPosUpdate}\n          />\n        ))}\n      </ContainerWrapper>\n    </Wrapper>\n  );\n};\n\nconst targetItems = (status: string, items: TodoTypes[]) =>\n  items.filter((item) => item.status === status);\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nconst ContainerWrapper = styled.div`\n  width: 90%;\n  display: flex;\n  justify-content: center;\n  gap: 4px 2%;\n  margin: 24px auto;\n\n  @media ${({ theme }) => theme.mobile} {\n    margin: 12px auto;\n  }\n`;\n\nexport default App;\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { CREATOR_LIST } from 'utils/config';\n\nimport { RadioBox } from 'components';\n\ninterface InputFormProps {\n  status: string;\n  setIsVisibleForm: Dispatch<SetStateAction<boolean>>;\n  handleTodoCreate: (status: string, text: string, creator: string) => void;\n}\n\nconst InputForm: React.FC<InputFormProps> = ({ status, setIsVisibleForm, handleTodoCreate }) => {\n  const [text, setText] = useState('');\n  const [creator, setCreator] = useState('');\n\n  const handleTextAreaChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  const handleRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCreator(e.target.value);\n  };\n\n  const handleButtonClick = () => {\n    setIsVisibleForm((prevVisible) => !prevVisible);\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    handleTodoCreate(status, text, creator);\n\n    setIsVisibleForm((prevVisible) => !prevVisible);\n  };\n\n  return (\n    <Wrapper>\n      <InputFormStyled onSubmit={handleFormSubmit}>\n        <TextArea placeholder=\"Enter a note\" value={text} onChange={handleTextAreaChange} />\n        <RadioBox values={CREATOR_LIST} handleRadioChange={handleRadioChange} status={status} />\n        <ButtonBox>\n          <AddButton type=\"submit\" disabled={!text || !creator} transparent={!text || !creator}>\n            Add\n          </AddButton>\n          <CancelButton type=\"button\" onClick={handleButtonClick}>\n            Cancel\n          </CancelButton>\n        </ButtonBox>\n      </InputFormStyled>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin: 12px 0;\n  padding: 20px;\n  border: 1px solid #dfdfdf;\n  border-radius: 10px;\n`;\n\nconst InputFormStyled = styled.form``;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 60px;\n  padding: 10px;\n  border-radius: 10px;\n  border-color: #dfdfdf;\n`;\n\nconst ButtonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  width: 100%;\n  height: 35px;\n\n  button {\n    width: 50%;\n    height: 100%;\n    border-radius: 10px;\n    font-size: 15px;\n  }\n`;\n\nconst AddButton = styled.button<{ transparent: boolean }>`\n  border: none;\n  color: #edffee;\n  background-color: #34a350;\n  opacity: ${(props) => props.transparent && '0.6'};\n`;\n\nconst CancelButton = styled.button`\n  color: #24272a;\n  border: 1px solid #dfdfdf;\n  background-color: #fafbfd;\n`;\n\nexport default InputForm;\n","const size = {\n  mobile: '768px',\n  tablet: '1024px',\n  desktop: '1440px',\n};\n\nconst theme = {\n  size: {\n    mobile: `(max-width:${size.mobile})`,\n    tablet: `(max-width:${size.tablet})`,\n    desktop: `(max-width:${size.desktop})`,\n  },\n  color: {\n    BLACK: '#37352f',\n    LIGHT_BLACK: '#333333',\n    GRAY: '#999999',\n    SKYBLUE: '#65abda',\n    ICON_COLOR: '#333333',\n    TRANSPARENT: '#00FFFFFF',\n  },\n};\nexport default theme;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box;\n  }\n\n  a {\n    color:#333\n  }\n  ul {\n    list-style:none;\n  }\n  button{\n    border:none;\n    outline:none;\n    background: none;\n    cursor:pointer;\n  }\n\n  body{\n    font-family : ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, \"Apple Color Emoji\", Arial, sans-serif, \"Segoe UI Emoji\", \"Segoe UI Symbol\"\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport theme from 'styles/theme';\nimport GlobalStyle from 'styles/GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}