{"version":3,"sources":["utils/date.ts","utils/Id.ts","utils/sorting.ts","hooks/useTodo.tsx","utils/config.ts","components/todos/TodoContainer.tsx","components/todos/TodoHeader.tsx","utils/dragNdrop.ts","components/todos/TodoItem.tsx","components/todos/TodoList.tsx","components/common/container/CreateButton.tsx","components/common/filter/Filter.tsx","components/common/filter/FilterModal.tsx","components/common/filter/FilterDropDown.tsx","hooks/useForm.tsx","components/common/form/CreateForm.tsx","components/common/form/FormButtons.tsx","components/common/form/FormTextArea.tsx","components/common/form/UpdateForm.tsx","components/common/header/Header.tsx","components/common/form/Radio.tsx","components/common/form/RadioBox.tsx","components/common/container/DeleteButton.tsx","App.tsx","components/common/InputForm.tsx","styles/theme.ts","styles/GlobalStyle.ts","index.tsx"],"names":["currentDate","date","Date","getFullYear","getMonth","getDate","currentId","items","Math","max","map","item","id","sortTodoHandle","a","b","dateA","createdAt","getTime","useTodo","useState","mockData","setItems","handleTodoCreate","useCallback","status","text","creator","prevItems","taskName","handleTodoDelete","taskID","filter","handleTodoUpdate","updatedAt","handleTodoPosUpdate","clickedId","insertPosition","updatePosition","target","find","Number","targetCard","excludeTargetCardItems","index","i","length","start","slice","end","handleTodoSort","sorted","sort","reduce","unique","includes","STATUS","Todo","InProgress","Done","WRITER_LIST","Wrapper","styled","div","TodoContainer","todoItems","isVisibleForm","setIsVisibleForm","selectCreator","setSelectCreator","selectFilter","setSelectFilter","handleVisibleForm","prevVisible","handleFilterdCreator","creators","result","forEach","data","push","flat","onCreatorNameCheckedHandler","checked","value","check","titleColor","theme","size","mobile","Left","Right","desktop","Title","h2","color","BLACK","props","Count","GRAY","TodoHeader","dropOpen","setDropOpen","viewItems","setViewItems","useEffect","filtered","filterOpen","creatorChecked","getInsertPlace","currentCard","y","placeInfo","getBoundingClientRect","bottom","top","TodoItem","todoItem","dragEnter","setEnterDrag","up","down","onEffect","setEffect","isClicked","setIsClicked","className","draggable","onDragStart","e","dataTransfer","setData","JSON","stringify","onDragOver","preventDefault","closest","clientY","onDragLeave","onDrop","itemId","Item","onClick","Top","Middle","TaskName","Bottom","Creator","BottomRight","DateLabel","SKYBLUE","li","tablet","h3","p","label","React","memo","TodoList","viewItem","clickedCardID","parse","getData","ul","ButtonStyled","button","ICON_COLOR","CreateButton","Filter","Button","handleSelectColor","FilterDropDown","filterClose","Modal","closeModal","Container","onSubmit","Content","name","Input","type","onChange","currentTarget","htmlFor","ResultBox","ResultButton","form","Header","input","DropDown","modalOpen","setModalOpen","handleModalClick","valueColor","FilterOptions","Value","FilterModal","span","useForm","initialText","setText","setCreator","handleRadioChange","handleTextAreaChange","FormStyled","CreateForm","placeholder","values","handleButtonClick","ButtonBox","AddButton","transparent","CancelButton","FormButtons","isAvailable","undefined","disabled","TextArea","textarea","FormTextArea","autoFocus","UpdateForm","HeaderWrapper","h1","RadioWrapper","InputStyled","LabelStyled","Radio","RadioBoxWrapper","RadioBox","DeleteButton","stopPropagation","targetItems","ContainerWrapper","App","Object","LIGHT_BLACK","TRANSPARENT","GlobalStyle","createGlobalStyle","reset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1784264e.chunk.js","sourcesContent":["export const currentDate = (): string => {\n  const date = new Date();\n  return `${date.getFullYear()}.${date.getMonth() + 1}.${date.getDate()}`;\n};\n","import { TodoTypes } from 'components';\n\nexport const currentId = (items: TodoTypes[]): number => {\n  const maxId = Math.max(...items.map((item: TodoTypes) => item.id));\n\n  return maxId + 1;\n};\n","export const sortTodoHandle = (\n  a: { createdAt: string | number | Date },\n  b: { createdAt: string | number | Date },\n): number => {\n  const dateA = new Date(a.createdAt).getTime();\n  const dateB = new Date(b.createdAt).getTime();\n  return dateB > dateA ? 1 : -1;\n};\n","import { useState, useCallback, Dispatch, SetStateAction } from 'react';\nimport { TodoTypes } from 'components';\nimport { currentDate } from 'utils/date';\nimport { currentId } from 'utils/Id';\nimport mockData from 'utils/data.json';\nimport { sortTodoHandle } from 'utils/sorting';\n\ntype useTodoType = {\n  items: TodoTypes[];\n  setItems: Dispatch<SetStateAction<TodoTypes[]>>;\n  handleTodoCreate: (status: string, text: string, creator: string) => void;\n  handleTodoDelete: (taskID: number) => void;\n  handleTodoSort: (status: string) => void;\n  handleTodoUpdate: (text: string, id: number) => void;\n  handleTodoPosUpdate: (\n    status: string,\n    currentId: string | undefined,\n    clickedId: string,\n    insertPosition?: string,\n  ) => void;\n};\n\nconst useTodo = (): useTodoType => {\n  const [items, setItems] = useState<TodoTypes[]>(mockData);\n\n  const handleTodoCreate = useCallback((status: string, text: string, creator: string) => {\n    setItems((prevItems) => [\n      ...prevItems,\n      {\n        id: currentId(prevItems),\n        taskName: text,\n        status: status,\n        creator: creator,\n        createdAt: currentDate(),\n      },\n    ]);\n  }, []);\n\n  const handleTodoDelete = useCallback((taskID: number) => {\n    setItems((prevItems) => prevItems.filter(({ id }) => id !== taskID));\n  }, []);\n\n  const handleTodoUpdate = useCallback((text: string, id: number) => {\n    setItems((prevItems) =>\n      prevItems.map((item: TodoTypes) =>\n        id === item.id ? { ...item, taskName: text, updatedAt: currentDate() } : item,\n      ),\n    );\n  }, []);\n\n  const handleTodoPosUpdate = useCallback(\n    (status: string, currentId: string | undefined, clickedId: string, insertPosition?: string) => {\n      setItems((prevItems) => updatePosition(prevItems));\n\n      const updatePosition = (prevItems: any) => {\n        const target = prevItems.find((item: TodoTypes) => item.id === Number(clickedId));\n        const targetCard = { ...target, status, updatedAt: currentDate() };\n        const excludeTargetCardItems = prevItems.filter(\n          (item: TodoTypes) => item.id !== Number(clickedId),\n        );\n\n        let index = 0;\n\n        for (let i = 0; i < excludeTargetCardItems.length; i++) {\n          if (!currentId) {\n            if (excludeTargetCardItems[i].status === status) {\n              index = i + 1;\n              continue;\n            }\n          }\n\n          if (excludeTargetCardItems[i].id === Number(currentId)) {\n            index = insertPosition === 'beforebegin' ? i : i + 1;\n            continue;\n          }\n        }\n\n        const start = excludeTargetCardItems.slice(0, index);\n        const end = excludeTargetCardItems.slice(index);\n        return [...start, targetCard, ...end];\n      };\n    },\n    [],\n  );\n\n  const handleTodoSort = useCallback(\n    (status: string) => {\n      const dateList = [\n        ...items.filter((item) => item.status === status).sort(sortTodoHandle),\n        ...items,\n      ];\n      const sorted = dateList.reduce(\n        (unique: TodoTypes[], item: TodoTypes) =>\n          unique.includes(item) ? unique : [...unique, item],\n        [],\n      );\n      setItems(sorted);\n    },\n    [items],\n  );\n\n  return {\n    items,\n    setItems,\n    handleTodoCreate,\n    handleTodoDelete,\n    handleTodoUpdate,\n    handleTodoSort,\n    handleTodoPosUpdate,\n  };\n};\n\nexport default useTodo;\n","interface Status {\n  Todo: string;\n  InProgress: string;\n  Done: string;\n}\n\nexport const STATUS: Status = {\n  Todo: '할 일',\n  InProgress: '진행 중',\n  Done: '완료',\n};\n\nexport const WRITER_LIST = ['남주', '택훈', '진수', '삭'];\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { TodoHeader, TodoList, CreateForm, TodoTypes } from 'components';\n\ninterface TodoContainerProps {\n  status: string;\n  todoItems: TodoTypes[];\n  handleTodoCreate: (status: string, text: string, creator: string) => void;\n  handleTodoDelete: (taskID: number) => void;\n  handleTodoUpdate: (text: string, id: number) => void;\n  handleTodoSort: (status: string) => void;\n  handleTodoPosUpdate: (\n    status: string,\n    currentId: string | undefined,\n    clickedId: string,\n    insertPosition?: string,\n  ) => void;\n}\n\nconst TodoContainer: React.FC<TodoContainerProps> = ({\n  status,\n  todoItems,\n  handleTodoCreate,\n  handleTodoDelete,\n  handleTodoUpdate,\n  handleTodoSort,\n  handleTodoPosUpdate,\n}) => {\n  const [isVisibleForm, setIsVisibleForm] = useState(false);\n  const [selectCreator, setSelectCreator] = useState<string[]>([]);\n  const [selectFilter, setSelectFilter] = useState({ date: false, creator: false });\n  const handleVisibleForm = () => {\n    setIsVisibleForm((prevVisible) => !prevVisible);\n  };\n\n  const onCreatorNameCheckedHandler = (checked: boolean, value: string) => {\n    checked\n      ? setSelectCreator([...selectCreator, value])\n      : setSelectCreator(selectCreator.filter((check) => check !== value));\n  };\n\n  const handleFilterdCreator = (creators: string[]) => {\n    const result: TodoTypes[][] = [];\n    creators.forEach((creator) => {\n      const data = todoItems.filter((item: TodoTypes) => item.creator === creator);\n      result.push(data);\n    });\n    return result.flat();\n  };\n\n  return (\n    <Wrapper>\n      <TodoHeader\n        {...{\n          status,\n          todoItems,\n          selectCreator,\n          handleVisibleForm,\n          handleTodoSort,\n          onCreatorNameCheckedHandler,\n          setSelectFilter,\n          selectFilter,\n          handleFilterdCreator,\n        }}\n      />\n      {isVisibleForm && (\n        <CreateForm\n          status={status}\n          handleVisibleForm={handleVisibleForm}\n          handleTodoCreate={handleTodoCreate}\n        />\n      )}\n      <TodoList\n        {...{\n          status,\n          todoItems,\n          selectCreator,\n          handleTodoDelete,\n          handleTodoUpdate,\n          handleTodoPosUpdate,\n          handleFilterdCreator,\n          selectFilter,\n        }}\n      />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nexport default TodoContainer;\n","import React, { useState, useEffect, Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport { Filter, CreateButton, TodoTypes } from 'components';\nimport { STATUS } from 'utils/config';\n\ninterface TodoHeaderProps {\n  status: string;\n  todoItems: TodoTypes[];\n  selectCreator: string[];\n  handleTodoSort: (status: string) => void;\n  handleVisibleForm: () => void;\n  onCreatorNameCheckedHandler: (checked: boolean, value: string) => void;\n  selectFilter: { date: boolean; creator: boolean };\n  setSelectFilter: Dispatch<SetStateAction<{ date: boolean; creator: boolean }>>;\n  handleFilterdCreator: (creators: string[]) => TodoTypes[];\n}\n\nconst TodoHeader: React.FC<TodoHeaderProps> = ({\n  status,\n  todoItems,\n  selectCreator,\n  handleTodoSort,\n  handleVisibleForm,\n  onCreatorNameCheckedHandler,\n  selectFilter,\n  setSelectFilter,\n  handleFilterdCreator,\n}) => {\n  const [dropOpen, setDropOpen] = useState<boolean>(false);\n  const [viewItems, setViewItems] = useState(todoItems);\n  const onFilterOpenHandler = () => setDropOpen(!dropOpen);\n\n  useEffect(() => {\n    setViewItems(todoItems);\n  }, [todoItems]);\n\n  useEffect(() => {\n    if (selectFilter.creator) {\n      const filtered = handleFilterdCreator(selectCreator);\n      setViewItems(filtered);\n    }\n  }, [selectFilter]);\n\n  return (\n    <Wrapper>\n      <Left>\n        <Title color={titleColor(status)}>{status}</Title>\n        <Count>{viewItems.length}</Count>\n      </Left>\n      <Right>\n        <CreateButton handleVisibleForm={handleVisibleForm} />\n        <Filter\n          {...{\n            status,\n            dropOpen,\n            selectCreator,\n            handleTodoSort,\n            todoItems,\n            selectFilter,\n            setSelectFilter,\n          }}\n          filterOpen={onFilterOpenHandler}\n          creatorChecked={onCreatorNameCheckedHandler}\n          handleTodoSort={handleTodoSort}\n          todoItems={todoItems}\n          selectFilter={selectFilter}\n          setSelectFilter={setSelectFilter}\n        />\n      </Right>\n    </Wrapper>\n  );\n};\n\nconst titleColor = (status: string): string => {\n  if (status === STATUS.Todo) return `rgba(255, 0, 26, 0.2)`;\n  else if (status === STATUS.InProgress) return `rgba(233, 168, 0, 0.2)`;\n  else return `rgba(0, 135, 107, 0.2)`;\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @media ${({ theme }) => theme.size.mobile} {\n    flex-direction: column;\n    align-items: stretch;\n  }\n  padding: 0 4px 16px;\n  box-shadow: rgb(55 53 47 / 16%) 0px 0.4px 0px;\n`;\n\nconst Left = styled.div`\n  display: flex;\n  gap: 0 4px;\n  align-items: center;\n`;\n\nconst Right = styled.div`\n  display: flex;\n  align-items: center;\n  @media ${({ theme }) => theme.size.desktop} {\n    gap: 0 4px;\n  }\n  @media ${({ theme }) => theme.size.mobile} {\n    justify-content: space-between;\n    margin-top: 8px;\n  }\n`;\n\nconst Title = styled.h2`\n  flex: 1;\n  color: ${({ theme }) => theme.color.BLACK};\n  padding: 6px;\n  border-radius: 4px;\n  background-color: ${(props) => props.color};\n`;\n\nconst Count = styled.h2`\n  color: ${({ theme }) => theme.color.GRAY};\n  margin-left: 8px;\n\n  @media ${({ theme }) => theme.size.mobile} {\n    flex-direction: column;\n    display: none;\n  }\n`;\n\nexport default TodoHeader;\n","export const getInsertPlace = (currentCard: Element | null, y: number): string => {\n  if (!currentCard) return 'afterend';\n  const placeInfo = currentCard.getBoundingClientRect();\n  const placeY = placeInfo.bottom - y;\n  const targetHeight = placeInfo.bottom - placeInfo.top;\n  const insertPlace = placeY > targetHeight / 2 ? 'beforebegin' : 'afterend';\n\n  return insertPlace;\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { DeleteButton, TodoTypes, UpdateForm } from 'components';\nimport { getInsertPlace } from 'utils/dragNdrop';\n\ninterface TodoItemProps {\n  status: string;\n  todoItem: TodoTypes;\n  handleTodoUpdate: (text: string, id: number) => void;\n  handleTodoDelete: (taskID: number) => void;\n}\n\nconst TodoItem: React.FC<TodoItemProps> = ({\n  todoItem: { id, taskName, status, creator, createdAt, updatedAt },\n  handleTodoUpdate,\n  handleTodoDelete,\n}) => {\n  const [dragEnter, setEnterDrag] = useState(false);\n  const [onEffect, setEffect] = useState({ up: false, down: false });\n  const [isClicked, setIsClicked] = useState(false);\n\n  const handleVisibleForm = () => {\n    setIsClicked((prevVisible) => !prevVisible);\n  };\n\n  const handleDragStart = (e: React.DragEvent<HTMLElement>) => {\n    e.dataTransfer.setData(\n      'card',\n      JSON.stringify({ id, taskName, status, creator, createdAt, updatedAt }),\n    );\n  };\n\n  const handleDragOverOnCard = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault();\n    const target = e.target as HTMLElement;\n    setEnterDrag(true);\n    getInsertPlace(target.closest('.card'), e.clientY) === 'beforebegin'\n      ? setEffect({ up: true, down: false })\n      : setEffect({ up: false, down: true });\n  };\n\n  const handleDragLeave = () => setEnterDrag(false);\n\n  const handleDragDrop = () => {\n    setEffect({ up: false, down: false });\n  };\n\n  return (\n    <Wrapper\n      id={`${id}`}\n      className=\"card\"\n      draggable={true}\n      dragEnter={dragEnter}\n      onEffect={onEffect}\n      onDragStart={handleDragStart}\n      onDragOver={handleDragOverOnCard}\n      onDragLeave={handleDragLeave}\n      onDrop={handleDragDrop}\n    >\n      {isClicked ? (\n        <UpdateForm\n          handleVisibleForm={handleVisibleForm}\n          handleTodoUpdate={handleTodoUpdate}\n          itemId={id}\n          taskName={taskName}\n        />\n      ) : (\n        <Item onClick={handleVisibleForm}>\n          <Top>\n            <DeleteButton taskID={id} handleTodoDelete={handleTodoDelete} />\n          </Top>\n          <Middle>\n            <TaskName>{taskName}</TaskName>\n          </Middle>\n          <Bottom>\n            <Creator>{creator}</Creator>\n            <BottomRight>\n              <Date>\n                <DateLabel>생성일 </DateLabel>\n                {createdAt}\n              </Date>\n              {updatedAt && (\n                <Date>\n                  <DateLabel>수정일 </DateLabel>\n                  {updatedAt}\n                </Date>\n              )}\n            </BottomRight>\n          </Bottom>\n        </Item>\n      )}\n    </Wrapper>\n  );\n};\ninterface Effect {\n  up: boolean;\n  down: boolean;\n}\ninterface WrapperProp {\n  dragEnter: boolean;\n  onEffect: Effect;\n}\n\nconst Wrapper = styled.div<WrapperProp>`\n  border: 5px solid transparent;\n  border-top: ${(props) =>\n    props.dragEnter && props.onEffect.up && `5px solid ${props.theme.color.SKYBLUE}`};\n  border-bottom: ${(props) =>\n    props.dragEnter && props.onEffect.down && `5px solid ${props.theme.color.SKYBLUE}`};\n`;\n\nconst Item = styled.li`\n  box-shadow: rgb(15 15 15 / 10%) 0px 0px 0px 1px, rgb(15 15 15 / 10%) 0px 2px 4px;\n  &:hover {\n    background: rgba(55, 53, 47, 0.03);\n    cursor: pointer;\n  }\n  padding: 0px 18px 18px;\n  border-radius: 4px;\n`;\n\nconst Top = styled.div`\n  width: 100%;\n  margin-left: 97%;\n  padding-top: 3%;\n  @media ${({ theme }) => theme.size.mobile} {\n    margin-left: 95%;\n    padding-top: 5%;\n  }\n`;\n\nconst Middle = styled.div`\n  width: 100%;\n`;\n\nconst Bottom = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 8px;\n  @media ${({ theme }) => theme.size.desktop} {\n    justify-content: space-between;\n  }\n  @media ${({ theme }) => theme.size.tablet} {\n    flex-direction: column;\n  }\n  @media ${({ theme }) => theme.size.mobile} {\n    flex-direction: column;\n  }\n`;\n\nconst BottomRight = styled.div``;\n\nconst TaskName = styled.h3`\n  color: ${({ theme }) => theme.color.BLACK};\n  width: 100%;\n  font-weight: 500;\n  margin-bottom: 12px;\n  @media ${({ theme }) => theme.size.desktop} {\n    font-size: 1.3em;\n    line-height: 1.5;\n  }\n  @media ${({ theme }) => theme.size.mobile} {\n    font-size: 1.1em;\n    line-height: 1.3;\n  }\n`;\n\nconst Creator = styled.h3`\n  color: ${({ theme }) => theme.color.SKYBLUE};\n  font-size: 1em;\n`;\n\nconst Date = styled.p`\n  color: ${({ theme }) => theme.color.GRAY};\n  margin-top: 4px;\n  @media ${({ theme }) => theme.size.desktop} {\n    font-size: 0.7em;\n  }\n  @media ${({ theme }) => theme.size.mobile} {\n    font-size: 0.3em;\n  }\n`;\n\nconst DateLabel = styled.label`\n  @media ${({ theme }) => theme.size.mobile} {\n    display: none;\n  }\n`;\n\nexport default React.memo(TodoItem);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { TodoItem, TodoTypes } from 'components';\nimport { getInsertPlace } from 'utils/dragNdrop';\ninterface TodoListProps {\n  status: string;\n  todoItems: TodoTypes[];\n  handleTodoUpdate: (text: string, id: number) => void;\n  handleTodoDelete: (taskID: number) => void;\n  handleTodoPosUpdate: (\n    status: string,\n    currentId: string | undefined,\n    clickedId: string,\n    insertPosition?: string,\n  ) => void;\n  handleFilterdCreator: (creators: string[]) => TodoTypes[];\n  selectFilter: { date: boolean; creator: boolean };\n  selectCreator: string[];\n}\n\nconst TodoList: React.FC<TodoListProps> = ({\n  status,\n  todoItems,\n  handleTodoDelete,\n  handleTodoUpdate,\n  handleTodoPosUpdate,\n  handleFilterdCreator,\n  selectFilter,\n  selectCreator,\n}) => {\n  const [viewItem, setViewItems] = useState(todoItems);\n\n  useEffect(() => {\n    setViewItems(todoItems);\n  }, [todoItems]);\n\n  useEffect(() => {\n    if (selectFilter.creator) {\n      const filtered = handleFilterdCreator(selectCreator);\n      setViewItems(filtered.length > 0 ? filtered : todoItems);\n    }\n  }, [selectFilter]);\n\n  const handleDrop = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault();\n    const target = e.target as HTMLElement;\n    const clickedCardID = JSON.parse(e.dataTransfer.getData('card')).id;\n    const currentCard = target.closest('.card');\n    const insertPosition = getInsertPlace(currentCard, e.clientY);\n\n    handleTodoPosUpdate(status, currentCard?.id, clickedCardID, insertPosition);\n  };\n\n  const handleDragOverOnColumn = (e: React.DragEvent<HTMLElement>) => e.preventDefault();\n\n  return (\n    <Wrapper\n      className={`cardlist ${status}`}\n      onDragOver={handleDragOverOnColumn}\n      onDrop={handleDrop}\n    >\n      {viewItem.map((todoItem, i) => (\n        <TodoItem\n          key={i}\n          status={status}\n          todoItem={todoItem}\n          handleTodoUpdate={handleTodoUpdate}\n          handleTodoDelete={handleTodoDelete}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default React.memo(TodoList);\n\nconst Wrapper = styled.ul`\n  padding: 4px;\n  height: 500px;\n  overflow-y: scroll;\n  overflow-x: hidden;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BsPlus } from 'react-icons/bs';\n\ninterface CreateButtonProps {\n  handleVisibleForm: () => void;\n}\n\nconst CreateButton: React.FC<CreateButtonProps> = ({ handleVisibleForm }): JSX.Element => {\n  const handleButtonClick = () => handleVisibleForm();\n\n  return (\n    <ButtonStyled onClick={handleButtonClick}>\n      <BsPlus />\n    </ButtonStyled>\n  );\n};\n\nconst ButtonStyled = styled.button`\n  font-size: 1.5em;\n  padding: 0px;\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.color.ICON_COLOR};\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n\nexport default CreateButton;\n","import React, { Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport { MdFilterList } from 'react-icons/md';\nimport { FilterDropDown } from 'components';\nimport { TodoTypes } from 'components/todos/TodoTypes';\nimport { STATUS } from 'utils/config';\n\ninterface DropDownProps {\n  status: string;\n  todoItems: TodoTypes[];\n  dropOpen: boolean;\n  selectCreator: string[];\n  filterOpen: () => void;\n  creatorChecked: (checked: boolean, value: string) => void;\n  handleTodoSort: (status: string) => void;\n  selectFilter: { date: boolean; creator: boolean };\n  setSelectFilter: Dispatch<SetStateAction<{ date: boolean; creator: boolean }>>;\n}\n\nconst Filter: React.FC<DropDownProps> = ({\n  status,\n  dropOpen,\n  filterOpen,\n  creatorChecked,\n  selectCreator,\n  handleTodoSort,\n  selectFilter,\n  setSelectFilter,\n}) => {\n  const handleSelectColor = (status: string) => {\n    if (selectFilter.date || selectFilter.creator) {\n      if (status === STATUS.Todo) return `rgba(255, 0, 25, 0.414)`;\n      else if (status === STATUS.InProgress) return `rgba(234, 167, 0, 0.386)`;\n      else return `rgba(9, 116, 95, 0.469)`;\n    } else {\n      return 'black';\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Button onClick={filterOpen}>\n        <MdFilterList size={24} color={handleSelectColor(status)} />\n      </Button>\n      {dropOpen && (\n        <FilterDropDown\n          {...{ status, creatorChecked, selectCreator, handleTodoSort, setSelectFilter }}\n          filterClose={filterOpen}\n          setSelectFilter={setSelectFilter}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Filter;\n\nconst Wrapper = styled.div`\n  text-align: right;\n  cursor: pointer;\n  position: relative;\n`;\n\nconst Button = styled.button`\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n","import React, { Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport { WRITER_LIST } from 'utils/config';\nimport { MdClose } from 'react-icons/md';\n\ninterface DropDownProps {\n  creatorChecked: (checked: boolean, value: string) => void;\n  selectCreator: string[];\n  closeModal: () => void;\n  filterClose: () => void;\n  status: string;\n  setSelectFilter: Dispatch<SetStateAction<{ date: boolean; creator: boolean }>>;\n}\n\nconst Modal: React.FC<DropDownProps> = ({\n  creatorChecked,\n  selectCreator,\n  closeModal,\n  filterClose,\n  setSelectFilter,\n}) => {\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (selectCreator.length === WRITER_LIST.length)\n      setSelectFilter({ date: false, creator: false });\n    else setSelectFilter({ date: false, creator: true });\n    closeModal();\n    filterClose();\n  };\n\n  return (\n    <Wrapper>\n      <Container onSubmit={onSubmit}>\n        <Header>\n          <h2>생성자 필터 선택</h2>\n          <MdClose onClick={closeModal} />\n        </Header>\n        <Content>\n          {WRITER_LIST.map((name: string, index: number) => (\n            <div key={index}>\n              <Input\n                type=\"checkbox\"\n                name={name}\n                checked={selectCreator.includes(name) ? true : false}\n                onChange={(e) => creatorChecked(e.currentTarget.checked, name)}\n              />\n              <label htmlFor={name}>{name}</label>\n            </div>\n          ))}\n        </Content>\n        <ResultBox>\n          <ResultButton>확인</ResultButton>\n        </ResultBox>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default Modal;\n\nconst Wrapper = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.6);\n`;\n\nconst Container = styled.form`\n  width: 400px;\n  height: 200px;\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  border-radius: 10px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0 2rem;\n\n  h2 {\n    font-weight: bold;\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0 2rem;\n`;\n\nconst Input = styled.input`\n  cursor: pointer;\n`;\n\nconst ResultBox = styled.div`\n  margin-bottom: 0.4rem;\n`;\n\nconst ResultButton = styled.button`\n  outline: none;\n  border: none;\n  cursor: pointer;\n  color: #24272a;\n  border: 1px solid #dfdfdf;\n  background-color: #fafbfd;\n  padding: 0.6rem 2.6rem;\n\n  :hover {\n    background-color: #8dc997;\n    color: #fff;\n  }\n`;\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport FilterModal from './FilterModal';\nimport { STATUS } from 'utils/config';\ninterface DropDownProps {\n  status: string;\n  creatorChecked: (checked: boolean, value: string) => void;\n  selectCreator: string[];\n  handleTodoSort: (status: string) => void;\n  filterClose: () => void;\n  setSelectFilter: Dispatch<SetStateAction<{ date: boolean; creator: boolean }>>;\n}\n\nconst DropDown: React.FC<DropDownProps> = ({\n  status,\n  creatorChecked,\n  selectCreator,\n  handleTodoSort,\n  filterClose,\n  setSelectFilter,\n}) => {\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n\n  const handleModalClick = () => setModalOpen(!modalOpen);\n\n  const sortEvent = () => {\n    handleTodoSort(status);\n    filterClose();\n  };\n\n  const valueColor = (status: string): string => {\n    if (status === STATUS.Todo) return `rgba(255, 0, 26, 0.2)`;\n    else if (status === STATUS.InProgress) return `rgba(233, 167, 0, 0.318)`;\n    else return `rgba(0, 135, 108, 0.318)`;\n  };\n\n  return (\n    <FilterOptions>\n      <Value color={valueColor(status)} onClick={sortEvent}>\n        생성일\n      </Value>\n      <Value color={valueColor(status)} onClick={handleModalClick}>\n        생성자\n      </Value>\n      {modalOpen && (\n        <FilterModal\n          {...{ creatorChecked, setSelectFilter, selectCreator, filterClose }}\n          closeModal={handleModalClick}\n          filterClose={filterClose}\n          status={status}\n        />\n      )}\n    </FilterOptions>\n  );\n};\n\nexport default DropDown;\n\nconst FilterOptions = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  box-shadow: rgb(15 15 15 / 10%) 0px 0px 0px 1px, rgb(15 15 15 / 10%) 0px 2px 4px;\n  border-radius: 5px;\n  width: 100px;\n  right: 0;\n  gap: 10px 0;\n  background-color: #fff;\n  text-align: center;\n`;\n\nconst Value = styled.span`\n  padding: 5px 0;\n\n  :hover {\n    background-color: ${(props) => props.color};\n    color: #fff;\n  }\n`;\n","import { useState } from 'react';\n\ninterface useFormType {\n  text: string;\n  creator: string;\n  handleRadioChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  handleTextAreaChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n}\n\nexport const useForm = (initialText: string): useFormType => {\n  const [text, setText] = useState(initialText);\n  const [creator, setCreator] = useState('');\n\n  const handleRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCreator(e.target.value);\n  };\n\n  const handleTextAreaChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  return { text, creator, handleRadioChange, handleTextAreaChange };\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { RadioBox, FormButtons, FormTextArea } from 'components';\nimport { useForm } from 'hooks/useForm';\nimport { WRITER_LIST } from 'utils/config';\ninterface CreateFormProps {\n  status: string;\n  handleVisibleForm: () => void;\n  handleTodoCreate: (status: string, text: string, creator: string) => void;\n}\n\nconst CreateForm: React.FC<CreateFormProps> = ({\n  status,\n  handleVisibleForm,\n  handleTodoCreate,\n}): JSX.Element => {\n  const { text, creator, handleRadioChange, handleTextAreaChange } = useForm('');\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    handleTodoCreate(status, text, creator);\n    handleVisibleForm();\n  };\n\n  return (\n    <Wrapper>\n      <FormStyled onSubmit={handleFormSubmit}>\n        <FormTextArea\n          placeholder=\"Enter a note\"\n          text={text}\n          handleTextAreaChange={handleTextAreaChange}\n        />\n        <RadioBox values={WRITER_LIST} handleRadioChange={handleRadioChange} status={status} />\n        <FormButtons text={text} creator={creator} handleButtonClick={handleVisibleForm} />\n      </FormStyled>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin: 12px 0;\n  padding: 20px;\n  border: 1px solid #dfdfdf;\n  border-radius: 10px;\n`;\n\nconst FormStyled = styled.form``;\n\nexport default CreateForm;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface FormButtons {\n  text: string;\n  creator?: string;\n  handleButtonClick: () => void;\n}\n\nconst FormButtons: React.FC<FormButtons> = ({ text, creator, handleButtonClick }): JSX.Element => {\n  const isAvailable = creator !== undefined ? !text || !creator : !text;\n\n  return (\n    <ButtonBox>\n      <AddButton type=\"submit\" disabled={isAvailable} transparent={isAvailable}>\n        Add\n      </AddButton>\n      <CancelButton type=\"button\" onClick={handleButtonClick}>\n        Cancel\n      </CancelButton>\n    </ButtonBox>\n  );\n};\n\nconst ButtonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  width: 100%;\n  height: 35px;\n\n  button {\n    width: 50%;\n    height: 100%;\n    border-radius: 10px;\n    font-size: 15px;\n\n    :hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst AddButton = styled.button<{ transparent: boolean }>`\n  border: none;\n  color: #edffee;\n  background-color: #34a350;\n  opacity: ${(props) => props.transparent && '0.6'};\n`;\n\nconst CancelButton = styled.button`\n  color: #24272a;\n  border: 1px solid #dfdfdf;\n  background-color: #fafbfd;\n`;\n\nexport default FormButtons;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface FormTextArea {\n  placeholder: string;\n  text: string;\n  handleTextAreaChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n}\n\nconst FormTextArea: React.FC<FormTextArea> = ({ placeholder, text, handleTextAreaChange }) => {\n  return (\n    <TextArea placeholder={placeholder} value={text} onChange={handleTextAreaChange} autoFocus />\n  );\n};\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 60px;\n  padding: 10px;\n  border-radius: 10px;\n  border-color: #dfdfdf;\n`;\n\nexport default FormTextArea;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { FormButtons, FormTextArea } from 'components';\nimport { useForm } from 'hooks/useForm';\n\ninterface UpdateForm {\n  itemId: number;\n  taskName: string;\n  handleVisibleForm: () => void;\n  handleTodoUpdate: (text: string, id: number) => void;\n}\n\nconst UpdateForm: React.FC<UpdateForm> = ({\n  handleVisibleForm,\n  handleTodoUpdate,\n  itemId,\n  taskName,\n}): JSX.Element => {\n  const { text, handleTextAreaChange } = useForm(taskName);\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    handleTodoUpdate(text, itemId);\n\n    handleVisibleForm();\n  };\n\n  return (\n    <Wrapper>\n      <FormStyled onSubmit={handleFormSubmit}>\n        <FormTextArea\n          placeholder={taskName}\n          text={text}\n          handleTextAreaChange={handleTextAreaChange}\n        />\n        <FormButtons text={text} handleButtonClick={handleVisibleForm} />\n      </FormStyled>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin: 12px 0;\n  padding: 20px;\n  background-color: white;\n  border: 1px solid #dfdfdf;\n  border-radius: 10px;\n`;\n\nconst FormStyled = styled.form``;\n\nexport default UpdateForm;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Header: React.FC = (): JSX.Element => {\n  return (\n    <>\n      <HeaderWrapper>Todo List</HeaderWrapper>\n    </>\n  );\n};\n\nconst HeaderWrapper = styled.h1`\n  color: ${({ theme }) => theme.color.BLACK};\n\n  padding: 16px;\n  font-size: 1.5em;\n  font-weight: 400;\n  box-shadow: rgb(55 53 47 / 16%) 0px 1px 0px;\n`;\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface RadioProps {\n  value: string;\n  status: string;\n  handleRadioChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Radio: React.FC<RadioProps> = ({ value, status, handleRadioChange }): JSX.Element => {\n  return (\n    <RadioWrapper>\n      <InputStyled\n        type=\"radio\"\n        name={status}\n        id={value + status}\n        value={value}\n        onChange={handleRadioChange}\n      />\n      <LabelStyled htmlFor={value + status}>{value}</LabelStyled>\n    </RadioWrapper>\n  );\n};\n\nconst RadioWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst InputStyled = styled.input`\n  appearance: none;\n  margin: 0 10px 2px 0;\n  width: 15px;\n  height: 15px;\n  border: 1px solid #dfdfdf;\n  border-radius: 0;\n\n  :checked {\n    background: green;\n    border: none;\n    border-radius: 0;\n  }\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst LabelStyled = styled.label`\n  color: #24272a;\n  font-size: 14px;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nexport default Radio;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Radio } from 'components';\n\ninterface RadioBoxProps {\n  values: string[];\n  status: string;\n  handleRadioChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst RadioBox: React.FC<RadioBoxProps> = ({ values, status, handleRadioChange }): JSX.Element => {\n  return (\n    <RadioBoxWrapper>\n      {values.map((value: string, index: number) => (\n        <Radio key={index} value={value} status={status} handleRadioChange={handleRadioChange} />\n      ))}\n    </RadioBoxWrapper>\n  );\n};\n\nconst RadioBoxWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n  margin: 10px 0;\n`;\n\nexport default RadioBox;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { IoMdClose } from 'react-icons/io';\n\ninterface DeleteButtonProps {\n  taskID: number;\n  handleTodoDelete: (taskID: number) => void;\n}\n\nconst DeleteButton: React.FC<DeleteButtonProps> = ({ taskID, handleTodoDelete }): JSX.Element => {\n  return (\n    <Button\n      onClick={(e) => {\n        e.stopPropagation();\n        handleTodoDelete(taskID);\n      }}\n    >\n      <IoMdClose />\n    </Button>\n  );\n};\n\nconst Button = styled.button`\n  font-size: 0.8em;\n  color: ${({ theme }) => theme.color.ICON_COLOR};\n  &:hover {\n    transform: scale(1.5);\n  }\n`;\n\nexport default DeleteButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport useTodo from 'hooks/useTodo';\nimport { STATUS } from './utils/config';\nimport { Header, TodoContainer, TodoTypes } from 'components';\n\nconst App: React.FC = () => {\n  const {\n    items,\n    handleTodoCreate,\n    handleTodoDelete,\n    handleTodoUpdate,\n    handleTodoPosUpdate,\n    handleTodoSort,\n  } = useTodo();\n  return (\n    <Wrapper>\n      <Header />\n      <ContainerWrapper>\n        {Object.values(STATUS).map((status: string, index: number) => (\n          <TodoContainer\n            key={index}\n            status={status}\n            todoItems={targetItems(status, items)}\n            handleTodoCreate={handleTodoCreate}\n            handleTodoDelete={handleTodoDelete}\n            handleTodoUpdate={handleTodoUpdate}\n            handleTodoSort={handleTodoSort}\n            handleTodoPosUpdate={handleTodoPosUpdate}\n          />\n        ))}\n      </ContainerWrapper>\n    </Wrapper>\n  );\n};\n\nconst targetItems = (status: string, items: TodoTypes[]) =>\n  items.filter((item) => item.status === status);\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nconst ContainerWrapper = styled.div`\n  width: 90%;\n  display: flex;\n  justify-content: center;\n  gap: 4px 2%;\n  margin: 24px auto;\n\n  @media ${({ theme }) => theme.size.tablet} {\n    margin: 12px auto;\n  }\n`;\n\nexport default App;\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { WRITER_LIST } from 'utils/config';\n\nimport { RadioBox } from 'components';\n\ninterface InputFormProps {\n  status: string;\n  setIsVisibleForm: Dispatch<SetStateAction<boolean>>;\n  handleTodoCreate: (status: string, text: string, creator: string) => void;\n}\n\nconst InputForm: React.FC<InputFormProps> = ({ status, setIsVisibleForm, handleTodoCreate }) => {\n  const [text, setText] = useState('');\n  const [creator, setCreator] = useState('');\n\n  const handleTextAreaChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  const handleRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCreator(e.target.value);\n  };\n\n  const handleButtonClick = () => {\n    setIsVisibleForm((prevVisible) => !prevVisible);\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    handleTodoCreate(status, text, creator);\n\n    setIsVisibleForm((prevVisible) => !prevVisible);\n  };\n\n  return (\n    <Wrapper>\n      <InputFormStyled onSubmit={handleFormSubmit}>\n        <TextArea placeholder=\"Enter a note\" value={text} onChange={handleTextAreaChange} />\n        <RadioBox values={WRITER_LIST} handleRadioChange={handleRadioChange} status={status} />\n        <ButtonBox>\n          <AddButton type=\"submit\" disabled={!text || !creator} transparent={!text || !creator}>\n            Add\n          </AddButton>\n          <CancelButton type=\"button\" onClick={handleButtonClick}>\n            Cancel\n          </CancelButton>\n        </ButtonBox>\n      </InputFormStyled>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin: 12px 0;\n  padding: 20px;\n  border: 1px solid #dfdfdf;\n  border-radius: 10px;\n`;\n\nconst InputFormStyled = styled.form``;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 60px;\n  padding: 10px;\n  border-radius: 10px;\n  border-color: #dfdfdf;\n`;\n\nconst ButtonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n  width: 100%;\n  height: 35px;\n\n  button {\n    width: 50%;\n    height: 100%;\n    border-radius: 10px;\n    font-size: 15px;\n  }\n`;\n\nconst AddButton = styled.button<{ transparent: boolean }>`\n  border: none;\n  color: #edffee;\n  background-color: #34a350;\n  opacity: ${(props) => props.transparent && '0.6'};\n`;\n\nconst CancelButton = styled.button`\n  color: #24272a;\n  border: 1px solid #dfdfdf;\n  background-color: #fafbfd;\n`;\n\nexport default InputForm;\n","const size = {\n  mobile: '768px',\n  tablet: '1024px',\n  desktop: '1440px',\n};\n\nconst theme = {\n  size: {\n    mobile: `(max-width:${size.mobile})`,\n    tablet: `(max-width:${size.tablet})`,\n    desktop: `(max-width:${size.desktop})`,\n  },\n  color: {\n    BLACK: '#37352f',\n    LIGHT_BLACK: '#333333',\n    GRAY: '#999999',\n    SKYBLUE: '#65abda',\n    ICON_COLOR: '#333333',\n    TRANSPARENT: '#00FFFFFF',\n  },\n};\nexport default theme;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box;\n  }\n\n  a {\n    color:#333\n  }\n  ul {\n    list-style:none;\n  }\n  button{\n    border:none;\n    outline:none;\n    background: none;\n    cursor:pointer;\n  }\n\n  body{\n    font-family : ui-sans-serif, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, \"Apple Color Emoji\", Arial, sans-serif, \"Segoe UI Emoji\", \"Segoe UI Symbol\"\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport theme from 'styles/theme';\nimport GlobalStyle from 'styles/GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}